name: Update IPTV

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.19'

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d %H:%M:%S CST')" >> $GITHUB_OUTPUT

      - name: Update IPTV sources
        shell: bash
        run: |
          set -eo pipefail
          echo "=== 🚀 開始更新 IPTV 源 ==="

          DATE="${{ steps.date.outputs.date }}"

          download() {
            local url=$1
            local file=$2
            echo "↓ 下載: $url"
            if wget -q --timeout=30 -O "$file" "$url"; then
              echo "✅ 成功：$url"
            else
              echo "⚠️ 下載失敗: $url"
              rm -f "$file"
            fi
          }

          clean_m3u() {
            local file=$1
            [ -f "$file" ] || return
            sed -i '/^\s*$/d' "$file"
            grep -q '^#EXTM3U' "$file" || sed -i '1i #EXTM3U' "$file"
          }

          combine_m3u() {
            local output=$1
            shift
            echo "#EXTM3U" > "$output"
            for f in "$@"; do
              [ -f "$f" ] && cat "$f" >> "$output"
            done
            sed -i '/^\s*$/d' "$output"
          }

          validate_m3u() {
            local file=$1
            [ -f "$file" ] || return
            local info_count=$(grep -c '^#EXTINF' "$file" || true)
            local url_count=$(grep -Ec '^(http|rtsp)' "$file" || true)
            if [ "$info_count" -lt 3 ] || [ "$url_count" -lt 3 ]; then
              echo "⚠️ 驗證失敗：$file（EXTINF:$info_count / URL:$url_count） → 已刪除"
              rm -f "$file"
            else
              echo "✅ 驗證通過：$file（EXTINF:$info_count / URL:$url_count）"
            fi
          }

          validate_all() {
            for f in *.m3u; do
              validate_m3u "$f"
            done
          }

          # ---------------------------
          # 央视源
          # ---------------------------
          download "https://raw.githubusercontent.com/fanmingming/live/main/tv/m3u/ipv6.m3u" source.m3u
          if grep -q '央视频道' source.m3u; then
            sed -n '/央视频道/,+1p' source.m3u > CCTV.m3u
            clean_m3u CCTV.m3u
          fi

          # ---------------------------
          # 卫视源
          # ---------------------------
          tmp1=$(mktemp /tmp/tmpfile.XXXXXX)
          tmp2=$(mktemp /tmp/tmpfile.XXXXXX)
          tmp3=$(mktemp /tmp/tmpfile.XXXXXX)
          sed -n '/卫视频道/,+1p' source.m3u > "$tmp1" || true
          sed -n '/NewTV系列/,+1p' source.m3u > "$tmp2" || true
          sed -n '/超清频道/,+1p' source.m3u > "$tmp3" || true
          combine_m3u CNTV.m3u "$tmp1" "$tmp2" "$tmp3"
          rm -f "$tmp1" "$tmp2" "$tmp3"

          # ---------------------------
          # 成人源
          # ---------------------------
          download "http://adultiptv.net/chs.m3u" AdultA.m3u
          sed -i 's/XXX/成人频道/' AdultA.m3u || true
          sed -i 's/AdultIPTV.net //g' AdultA.m3u || true
          download "https://met.pages.dev/static/iptv/av.m3u" AdultB.m3u
          download "https://raw.githubusercontent.com/hfpiao/IPTV/refs/heads/main/Adult.m3u" AdultC.m3u
          download "https://raw.githubusercontent.com/yyqyu/mytv/refs/heads/main/Adult.m3u" AdultD.m3u
          download "https://raw.githubusercontent.com/WaykeYu/MyTV_tw/refs/heads/main/UBTV18.m3u" AdultE.m3u
          combine_m3u Adult.m3u AdultA.m3u AdultB.m3u AdultC.m3u AdultD.m3u AdultE.m3u
          rm -f AdultA.m3u AdultB.m3u AdultC.m3u AdultD.m3u AdultE.m3u

          # ---------------------------
          # 港澳台源
          # ---------------------------
          download "https://raw.githubusercontent.com/Mitchll1214/m3u/main/港澳台.m3u" GAT1.m3u
          download "https://cdn.jsdelivr.net/gh/Guovin/iptv-api@gd/output/result.m3u" GAT2.m3u
          download "https://ghp.ci/https://raw.githubusercontent.com/yuanzl77/IPTV/main/live.m3u" GAT3.m3u
          download "https://epg.pw/test_channels_taiwan.m3u" GAT4.m3u
          download "https://iptv-org.github.io/iptv/countries/tw.m3u" GAT5.m3u
          download "https://raw.githubusercontent.com/WaykeYu/MyTV_tw/refs/heads/main/TW_switch.m3u" GAT6.m3u
          download "https://raw.githubusercontent.com/WaykeYu/verify-iptv/refs/heads/main/source/UBTV.m3u" GAT7.m3u
          combine_m3u GAT.m3u GAT1.m3u GAT2.m3u GAT3.m3u GAT4.m3u GAT5.m3u GAT6.m3u GAT7.m3u
          rm -f GAT1.m3u GAT2.m3u GAT3.m3u GAT4.m3u GAT5.m3u GAT6.m3u GAT7.m3u

          # ---------------------------
          # 4K 源（改名為 fourk_*）
          # ---------------------------
          download "https://raw.githubusercontent.com/YanG-1989/m3u/main/Gather.m3u" fourk_raw.m3u
          sed -n '/4K/,+1p' fourk_raw.m3u > fourk.m3u || true
          sed -n '/4k/,+1p' fourk_raw.m3u >> fourk.m3u || true
          clean_m3u fourk.m3u
          rm -f fourk_raw.m3u

          # ---------------------------
          # 驗證所有 m3u
          # ---------------------------
          echo "=== 🔍 開始驗證所有 m3u 檔案 ==="
          validate_all

          # ---------------------------
          # 整合源
          # ---------------------------
          combine_m3u IPTV.m3u CCTV.m3u CNTV.m3u GAT.m3u fourk.m3u
          combine_m3u IPTV-all.m3u CCTV.m3u CNTV.m3u GAT.m3u fourk.m3u Adult.m3u

          # ---------------------------
          # 下載 EPG
          # ---------------------------
          download "https://epg.112114.xyz/pp.xml" EPG.xml

          # 寫 README
          cat > README.md <<'EOF'
### 📺 IPTV 自動更新
- 更新時間: '"$DATE"'
- 已驗證各 M3U 檔案有效性
- 來源: fanmingming, YanG-1989, WaykeYu, Guovin, adultiptv 等
- 自動整合生成 IPTV.m3u 與 IPTV-all.m3u
EOF

          echo "=== ✅ 更新與驗證完成 ==="

      - name: Commit and Push changes
        shell: bash
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          if ! git diff --quiet; then
            git commit -am "📅 Update: ${{ steps.date.outputs.date }}"
            git push -f origin HEAD:${{ github.ref_name }}
          else
            echo "🟢 No changes to commit."
